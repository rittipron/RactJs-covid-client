{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dataCovide, setDataCovide] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const titleStyle = {\n    textAlign: \"center\",\n    marginBottom: '0px'\n  };\n\n  const renderElement = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: dataCovide,\n      barHeight: 20,\n      labelStyles: {\n        fontSize: '10px'\n      },\n      iterationTitleStyles: {\n        fontSize: '20px'\n      },\n      iterationTimeout: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }, this);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(response => {\n      let res = response.data;\n      let date = \"\";\n      let i = -1;\n      res.map(val => {\n        if (date == val.timeline) {\n          dataCovide[i].values.push({\n            id: val.id_country,\n            label: val.province == null ? val.country : val.country + \" \" + val.province,\n            value: val.amount + \"(cases)\",\n            color: val.color\n          });\n          date = val.timeline;\n        } else {\n          dataCovide.push({\n            name: val.timeline,\n            values: [...dataCovide, {\n              id: val.id_country,\n              label: val.province == null ? val.country : val.country + \" \" + val.province,\n              value: val.amount,\n              color: val.color\n            }]\n          });\n          date = val.timeline;\n          i++;\n        }\n      });\n    }).then(() => {\n      console.log(\"Complie\");\n      setLoading(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: titleStyle,\n      children: \"Covid Global Cases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), renderElement()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gtk4676NYbNl6JVmg6ja7CUP0Bc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","dataCovide","setDataCovide","loading","setLoading","titleStyle","textAlign","marginBottom","renderElement","fontSize","get","then","response","res","data","date","i","map","val","timeline","values","push","id","id_country","label","province","country","value","amount","color","name","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction App() {\n  const [dataCovide, setDataCovide] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const titleStyle = {\n    textAlign:\"center\",\n    marginBottom: '0px'\n  }\n\n  const renderElement = () =>{\n    if(loading) return <DynamicBarChart \n    data={dataCovide} \n    barHeight={20}\n    labelStyles={{fontSize: '10px'}}\n    iterationTitleStyles={{fontSize: '20px'}}\n    iterationTimeout={1000} />;\n }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/covidworld\")\n      .then((response) => {\n        let res = response.data;\n        let date = \"\";\n        let i = -1;\n        res.map((val) => {\n          if (date == val.timeline) {\n            dataCovide[i].values.push({\n              id: val.id_country,\n              label: val.province==null?val.country:val.country +\" \"+ val.province,\n              value: val.amount + \"(cases)\",\n              color: val.color,\n            });\n            date = val.timeline;\n          } else {\n            dataCovide.push({\n              name: val.timeline,\n              values: [\n                ...dataCovide,\n                {\n                  id: val.id_country,\n                  label: val.province==null?val.country:val.country +\" \"+ val.province,\n                  value: val.amount,\n                  color: val.color,\n                },\n              ],\n            });\n            date = val.timeline;\n            i++;\n          }\n        });\n      })\n      .then(() => {\n        console.log(\"Complie\")\n        setLoading(true)\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1 style={titleStyle}>Covid Global Cases</h1>\n      {renderElement()}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}