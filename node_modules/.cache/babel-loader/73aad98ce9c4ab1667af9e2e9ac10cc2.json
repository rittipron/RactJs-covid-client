{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DynamicBarChart } from 'react-dynamic-charts';\nimport 'react-dynamic-charts/dist/index.css'; // Don't forget to import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([{\n    \"name\": \"Round 1\",\n    \"values\": [{\n      \"id\": 1,\n      \"label\": \"Test 1\",\n      \"value\": 0,\n      \"color\": \"red\"\n    }, {\n      \"id\": 2,\n      \"label\": \"Test 2\",\n      \"value\": 0,\n      \"color\": \"yellow\"\n    }, {\n      \"id\": 3,\n      \"label\": \"Test 3\",\n      \"value\": 0,\n      \"color\": \"green\"\n    }]\n  }]);\n  useEffect(() => {\n    axios.get(\"https://disease.sh/v3/covid-19/historical\").then(response => {\n      setTestData(response.data); // let date = \"\";\n      // response.data.map((val,key)=>{\n      //   if(date == val.age){\n      //     data.value.map((value,key)=>{\n      //       setData([...data.values, {name:value.name}])\n      //     })\n      //   date = val.age;\n      // }else{\n      //   setData([...data, { age: val.age, value:[ {name:val.name}]}])\n      //   date = val.age;\n      //   }\n      // })\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      iterationTimeout: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"1LxgCEgFcv3hs4ChsaNMozJOCgQ=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","get","then","response"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,qCAAP,C,CAA8C;;;;AAE9C,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAC/B;AACE,YAAQ,SADV;AAEE,cAAU,CACR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KADQ,EAOR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KAPQ,EAaR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KAbQ;AAFZ,GAD+B,CAAD,CAAhC;AA2BAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACO,GAAN,CAAU,2CAAV,EAAuDC,IAAvD,CAA6DC,QAAD,IAAc;AACxEL,MAAAA,WAAW,CAACK,QAAQ,CAACJ,IAAV,CAAX,CADwE,CAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAdH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBE,sBACE;AAAA,2BAEA,QAAC,eAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,gBAAgB,EAAE;AAFpB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;;GAzDQH,G;;KAAAA,G;AAyDR;AAED,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { DynamicBarChart } from 'react-dynamic-charts';\nimport 'react-dynamic-charts/dist/index.css'; // Don't forget to import the styles\n\nfunction App() {\n  const [testData, setTestData] = useState([])\n  const [data, setData] = useState([\n    {\n      \"name\": \"Round 1\",\n      \"values\": [\n        {\n          \"id\": 1,\n          \"label\": \"Test 1\",\n          \"value\": 0,\n          \"color\": \"red\"\n        },\n        {\n          \"id\": 2,\n          \"label\": \"Test 2\",\n          \"value\": 0,\n          \"color\": \"yellow\"\n        },\n        {\n          \"id\": 3,\n          \"label\": \"Test 3\",\n          \"value\": 0,\n          \"color\": \"green\"\n        }\n        \n      ]\n    },\n  ]);\n\n  useEffect(() => {\n    axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n      setTestData(response.data);\n        // let date = \"\";\n        // response.data.map((val,key)=>{\n        //   if(date == val.age){\n        //     data.value.map((value,key)=>{\n        //       setData([...data.values, {name:value.name}])\n        //     })\n        //   date = val.age;\n        // }else{\n        //   setData([...data, { age: val.age, value:[ {name:val.name}]}])\n        //   date = val.age;\n        //   }\n        // })\n      });\n  }, [])\n \n    return (\n      <div>\n        {\n      <DynamicBarChart\n        data={data}\n        iterationTimeout={1000}\n      />\n        }\n      </div>\n    )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}