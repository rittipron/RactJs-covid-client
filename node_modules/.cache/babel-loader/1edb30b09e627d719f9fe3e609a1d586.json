{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add, setAdd] = useState([]);\n  const [update, setUpdate] = useState([{\n    id_country: 53,\n    country: \"\"\n  }, {\n    id_country: 54,\n    country: \"\"\n  }, {\n    id_country: 55,\n    country: \"\"\n  }, {\n    id_country: 56,\n    country: \"\"\n  }, {\n    id_country: 57,\n    country: \"\"\n  }, {\n    id_country: 58,\n    country: \"\"\n  }, {\n    id_country: 59,\n    country: \"\"\n  }, {\n    id_country: 60,\n    country: \"\"\n  }, {\n    id_country: 61,\n    country: \"\"\n  }, {\n    id_country: 62,\n    country: \"\"\n  }, {\n    id_country: 63,\n    country: \"\"\n  }, {\n    id_country: 64,\n    country: \"\"\n  }, {\n    id_country: 65,\n    country: \"\"\n  }, {\n    id_country: 66,\n    country: \"\"\n  }, {\n    id_country: 67,\n    country: \"\"\n  }, {\n    id_country: 68,\n    country: \"\"\n  }, {\n    id_country: 69,\n    country: \"\"\n  }]);\n  const [covid, setCovid] = useState([{\n    name: \"Round 1\",\n    values: [{\n      id: 1,\n      label: \"Test 1\",\n      value: 0,\n      color: \"red\"\n    }, {\n      id: 2,\n      label: \"Test 2\",\n      value: 0,\n      color: \"yellow\"\n    }, {\n      id: 3,\n      label: \"Test 3\",\n      value: 0,\n      color: \"green\"\n    }]\n  }]);\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  const MapData = () => {\n    // let date = \"\";\n    testData.map(val => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n      data.push([{\n        name: val.timeline,\n        values: [{\n          id: 1,\n          label: val.country,\n          value: val.amount,\n          color: \"green\"\n        }]\n      }]); // date = val.timeline;\n\n      console.log(1); // }\n    });\n  };\n\n  const testconsole = () => {\n    // console.log(add);\n    add.map(val => {\n      axios.post(\"http://localhost:3001/createcovidworld\", {\n        id_country: 0,\n        country: val.country,\n        province: val.province,\n        timeline: '4/22/21',\n        amount: val.timeline.cases['4/22/21']\n      }).then(() => {}).catch(e => {\n        console.log(e);\n      });\n      console.log(1);\n    });\n  };\n\n  useEffect(() => {\n    // axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n    //   setTestData(response.data);\n    // });\n    // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n    console.log(update);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      startAutomatically: false,\n      showStartButton: true,\n      startButtonText: 'Click Me!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bVG1n4QRH0HvnvI6B2dodO/OPeU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","add","setAdd","update","setUpdate","id_country","country","covid","setCovid","name","values","id","label","value","color","getRandomColor","letters","i","Math","floor","random","MapData","map","val","push","timeline","amount","console","log","testconsole","post","province","cases","then","catch","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add , setAdd] = useState([]);\n  const [update , setUpdate] = useState([\n    {\n      id_country: 53,\n      country:\"\"\n    },\n    {\n      id_country: 54,\n      country:\"\"\n    },\n    {\n      id_country: 55,\n      country:\"\"\n    },\n    {\n      id_country: 56,\n      country:\"\"\n    },\n    {\n      id_country: 57,\n      country:\"\"\n    },\n    {\n      id_country: 58,\n      country:\"\"\n    },\n    {\n      id_country: 59,\n      country:\"\"\n    },\n    {\n      id_country: 60,\n      country:\"\"\n    },\n    {\n      id_country: 61,\n      country:\"\"\n    },\n    {\n      id_country: 62,\n      country:\"\"\n    },\n    {\n      id_country: 63,\n      country:\"\"\n    },\n    {\n      id_country: 64,\n      country:\"\"\n    },\n    {\n      id_country: 65,\n      country:\"\"\n    },\n    {\n      id_country: 66,\n      country:\"\"\n    },\n    {\n      id_country: 67,\n      country:\"\"\n    },\n    {\n      id_country: 68,\n      country:\"\"\n    },\n    {\n      id_country: 69,\n      country:\"\"\n    },\n  ]);\n  const [covid, setCovid] = useState([\n    {\n      name: \"Round 1\",\n      values: [\n        {\n          id: 1,\n          label: \"Test 1\",\n          value: 0,\n          color: \"red\",\n        },\n        {\n          id: 2,\n          label: \"Test 2\",\n          value: 0,\n          color: \"yellow\",\n        },\n        {\n          id: 3,\n          label: \"Test 3\",\n          value: 0,\n          color: \"green\",\n        },\n      ],\n    }\n  ]);\n\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const MapData = () =>{\n    // let date = \"\";\n    testData.map((val) => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n        data.push([\n          {\n            name: val.timeline,\n            values: [{ \n              id: 1,\n              label: val.country,\n              value: val.amount,\n              color: \"green\",\n            }],\n          },\n        ]);\n        // date = val.timeline;\n        console.log(1)\n      // }\n    });\n  }\n\n  const testconsole = () => {\n    // console.log(add);\n    add.map((val)=>{\n    axios.post(\"http://localhost:3001/createcovidworld\", {\n        id_country: 0,\n        country: val.country,\n        province: val.province,\n        timeline: '4/22/21',\n        amount: val.timeline.cases['4/22/21']\n      })\n      .then(() => {}).catch((e)=>{console.log(e)})\n      console.log(1)\n    })\n  };\n\n useEffect(() => {\n    // axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n    //   setTestData(response.data);\n    // });\n    // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n    console.log(update)\n  }, []);\n\n  return (\n    <div>\n      <button onClick={testconsole}>Check</button><button onClick={testconsole}>Check</button>\n      {<DynamicBarChart \n      data={data} \n      startAutomatically={false}\n      showStartButton={true}\n      startButtonText={'Click Me!'} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}