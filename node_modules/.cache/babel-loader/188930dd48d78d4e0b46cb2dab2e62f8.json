{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { DynamicBarChart } from 'react-dynamic-charts';\nimport 'react-dynamic-charts/dist/index.css'; // Don't forget to import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([{\n    \"name\": \"Round 1\",\n    \"values\": [{\n      \"id\": 1,\n      \"label\": \"Test 1\",\n      \"value\": 0,\n      \"color\": \"red\"\n    }, {\n      \"id\": 2,\n      \"label\": \"Test 2\",\n      \"value\": 0,\n      \"color\": \"yellow\"\n    }, {\n      \"id\": 3,\n      \"label\": \"Test 3\",\n      \"value\": 0,\n      \"color\": \"green\"\n    }]\n  }]);\n  axios.get(\"http://localhost:3002/employee\").then(response => {\n    setEmployeeList(response.data);\n    let date = \"\";\n    response.data.map((val, key) => {\n      if (date == val.age) {\n        data.value.map((value, key) => {\n          setData([...data.values, {\n            name: value.name\n          }]);\n        });\n        date = val.age;\n      } else {\n        setData([...data, {\n          age: val.age,\n          value: [{\n            name: val.name\n          }]\n        }]);\n        date = val.age;\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      iterationTimeout: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"Lo4TovMybl48gfrHTcop7olqssY=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","axios","DynamicBarChart","App","data","setData","get","then","response","setEmployeeList","date","map","val","key","age","value","values","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,qCAAP,C,CAA8C;;;;AAE9C,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAC/B;AACE,YAAQ,SADV;AAEE,cAAU,CACR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KADQ,EAOR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KAPQ,EAaR;AACE,YAAM,CADR;AAEE,eAAS,QAFX;AAGE,eAAS,CAHX;AAIE,eAAS;AAJX,KAbQ;AAFZ,GAD+B,CAAD,CAAhC;AA2BAC,EAAAA,KAAK,CAACK,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IAAc;AAC3DC,IAAAA,eAAe,CAACD,QAAQ,CAACJ,IAAV,CAAf;AACA,QAAIM,IAAI,GAAG,EAAX;AACAF,IAAAA,QAAQ,CAACJ,IAAT,CAAcO,GAAd,CAAkB,CAACC,GAAD,EAAKC,GAAL,KAAW;AAC3B,UAAGH,IAAI,IAAIE,GAAG,CAACE,GAAf,EAAmB;AACjBV,QAAAA,IAAI,CAACW,KAAL,CAAWJ,GAAX,CAAe,CAACI,KAAD,EAAOF,GAAP,KAAa;AAC1BR,UAAAA,OAAO,CAAC,CAAC,GAAGD,IAAI,CAACY,MAAT,EAAiB;AAACC,YAAAA,IAAI,EAACF,KAAK,CAACE;AAAZ,WAAjB,CAAD,CAAP;AACD,SAFD;AAGFP,QAAAA,IAAI,GAAGE,GAAG,CAACE,GAAX;AACD,OALC,MAKG;AACHT,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAAEU,UAAAA,GAAG,EAAEF,GAAG,CAACE,GAAX;AAAgBC,UAAAA,KAAK,EAAC,CAAE;AAACE,YAAAA,IAAI,EAACL,GAAG,CAACK;AAAV,WAAF;AAAtB,SAAV,CAAD,CAAP;AACAP,QAAAA,IAAI,GAAGE,GAAG,CAACE,GAAX;AACC;AACF,KAVD;AAWD,GAdH;AAgBE,sBACE;AAAA,2BAEA,QAAC,eAAD;AACE,MAAA,IAAI,EAAEV,IADR;AAEE,MAAA,gBAAgB,EAAE;AAFpB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;;GAtDQD,G;;KAAAA,G;AAsDR;AAED,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nimport { DynamicBarChart } from 'react-dynamic-charts';\nimport 'react-dynamic-charts/dist/index.css'; // Don't forget to import the styles\n\nfunction App() {\n  const [data, setData] = useState([\n    {\n      \"name\": \"Round 1\",\n      \"values\": [\n        {\n          \"id\": 1,\n          \"label\": \"Test 1\",\n          \"value\": 0,\n          \"color\": \"red\"\n        },\n        {\n          \"id\": 2,\n          \"label\": \"Test 2\",\n          \"value\": 0,\n          \"color\": \"yellow\"\n        },\n        {\n          \"id\": 3,\n          \"label\": \"Test 3\",\n          \"value\": 0,\n          \"color\": \"green\"\n        }\n        \n      ]\n    },\n  ])\n\n  axios.get(\"http://localhost:3002/employee\").then((response) => {\n      setEmployeeList(response.data);\n      let date = \"\";\n      response.data.map((val,key)=>{\n        if(date == val.age){\n          data.value.map((value,key)=>{\n            setData([...data.values, {name:value.name}])\n          })\n        date = val.age;\n      }else{\n        setData([...data, { age: val.age, value:[ {name:val.name}]}])\n        date = val.age;\n        }\n      })\n    });\n\n    return (\n      <div>\n        {\n      <DynamicBarChart\n        data={data}\n        iterationTimeout={1000}\n      />\n        }\n      </div>\n    )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}