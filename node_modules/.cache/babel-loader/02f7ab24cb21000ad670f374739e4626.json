{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add, setAdd] = useState([]);\n  const [covid, setCovid] = useState([{\n    name: \"Round 1\",\n    values: [{\n      id: 1,\n      label: \"Test 1\",\n      value: 0,\n      color: \"red\"\n    }, {\n      id: 2,\n      label: \"Test 2\",\n      value: 0,\n      color: \"yellow\"\n    }, {\n      id: 3,\n      label: \"Test 3\",\n      value: 0,\n      color: \"green\"\n    }]\n  }]);\n\n  const testconsole = () => {\n    // console.log(data);\n    testData.map(val => {\n      axios.post(\"http://localhost:3001/createcovidworld\", {\n        country: val.country,\n        timeline: \"4/10/21\",\n        amount: val.timeline.cases[\"4/10/21\"]\n      }).then(() => {\n        console.log(\"success\");\n      }).catch(e => {\n        console.log(e);\n      });\n    });\n  };\n\n  const convid = () => {\n    axios.get(\"https://disease.sh/v3/covid-19/historical\").then(response => {\n      setAdd(response.data);\n    });\n  };\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  const MapData = () => {\n    // let date = \"\";\n    testData.map(val => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n      data.push([{\n        name: val.timeline,\n        values: [{\n          id: 1,\n          label: val.country,\n          value: val.amount,\n          color: \"green\"\n        }]\n      }]); // date = val.timeline;\n\n      console.log(1); // }\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(response => {\n      setTestData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: MapData,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      startAutomatically: false,\n      showStartButton: true,\n      startButtonText: 'Click Me!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rL8G8njs297/12drUJjPXX1S6Ik=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","add","setAdd","covid","setCovid","name","values","id","label","value","color","testconsole","map","val","post","country","timeline","amount","cases","then","console","log","catch","e","convid","get","response","getRandomColor","letters","i","Math","floor","random","MapData","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,qCAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,GAAD,EAAOC,MAAP,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CACjC;AACEa,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,KAAK,EAAE,CAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KADM,EAON;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,KAAK,EAAE,CAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAPM,EAaN;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,KAAK,EAAE,CAHT;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAbM;AAFV,GADiC,CAAD,CAAlC;;AA0BA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACAd,IAAAA,QAAQ,CAACe,GAAT,CAAcC,GAAD,IAAO;AACpBnB,MAAAA,KAAK,CAACoB,IAAN,CAAW,wCAAX,EAAqD;AACjDC,QAAAA,OAAO,EAAEF,GAAG,CAACE,OADoC;AAEjDC,QAAAA,QAAQ,EAAE,SAFuC;AAGjDC,QAAAA,MAAM,EAAEJ,GAAG,CAACG,QAAJ,CAAaE,KAAb,CAAmB,SAAnB;AAHyC,OAArD,EAKGC,IALH,CAKQ,MAAM;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAPH,EAOKC,KAPL,CAOYC,CAAD,IAAK;AAACH,QAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AAAe,OAPhC;AAQC,KATD;AAUD,GAZD;;AAcA,QAAMC,MAAM,GAAG,MAAK;AAClB9B,IAAAA,KAAK,CAAC+B,GAAN,CAAU,2CAAV,EAAuDN,IAAvD,CAA6DO,QAAD,IAAc;AACxExB,MAAAA,MAAM,CAACwB,QAAQ,CAAC3B,IAAV,CAAN;AACD,KAFD;AAGD,GAJD;;AAMA,QAAM4B,cAAc,GAAG,MAAM;AAC3B,QAAIC,OAAO,GAAG,kBAAd;AACA,QAAIlB,KAAK,GAAG,GAAZ;;AACA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BnB,MAAAA,KAAK,IAAIkB,OAAO,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,WAAOtB,KAAP;AACD,GAPD;;AASA,QAAMuB,OAAO,GAAG,MAAK;AACnB;AACApC,IAAAA,QAAQ,CAACe,GAAT,CAAcC,GAAD,IAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEd,MAAAA,IAAI,CAACmC,IAAL,CAAU,CACR;AACE7B,QAAAA,IAAI,EAAEQ,GAAG,CAACG,QADZ;AAEEV,QAAAA,MAAM,EAAE,CAAC;AACPC,UAAAA,EAAE,EAAE,CADG;AAEPC,UAAAA,KAAK,EAAEK,GAAG,CAACE,OAFJ;AAGPN,UAAAA,KAAK,EAAEI,GAAG,CAACI,MAHJ;AAIPP,UAAAA,KAAK,EAAE;AAJA,SAAD;AAFV,OADQ,CAAV,EAZkB,CAuBlB;;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAxBkB,CAyBpB;AACD,KA1BD;AA2BD,GA7BD;;AA+BD5B,EAAAA,SAAS,CAAC,MAAM;AACbC,IAAAA,KAAK,CAAC+B,GAAN,CAAU,kCAAV,EAA8CN,IAA9C,CAAoDO,QAAD,IAAc;AAC/D5B,MAAAA,WAAW,CAAC4B,QAAQ,CAAC3B,IAAV,CAAX;AACD,KAFD;AAGD,GAJO,EAIL,EAJK,CAAT;AAMC,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEkC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAC0C;AAAQ,MAAA,OAAO,EAAEtB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1C,eAEG,QAAC,eAAD;AACD,MAAA,IAAI,EAAEZ,IADL;AAED,MAAA,kBAAkB,EAAE,KAFnB;AAGD,MAAA,eAAe,EAAE,IAHhB;AAID,MAAA,eAAe,EAAE;AAJhB;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1GQH,G;;KAAAA,G;AA4GT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add , setAdd] = useState([]);\n  const [covid, setCovid] = useState([\n    {\n      name: \"Round 1\",\n      values: [\n        {\n          id: 1,\n          label: \"Test 1\",\n          value: 0,\n          color: \"red\",\n        },\n        {\n          id: 2,\n          label: \"Test 2\",\n          value: 0,\n          color: \"yellow\",\n        },\n        {\n          id: 3,\n          label: \"Test 3\",\n          value: 0,\n          color: \"green\",\n        },\n      ],\n    }\n  ]);\n\n  const testconsole = () => {\n    // console.log(data);\n    testData.map((val)=>{\n    axios.post(\"http://localhost:3001/createcovidworld\", {\n        country: val.country,\n        timeline: \"4/10/21\",\n        amount: val.timeline.cases[\"4/10/21\"],\n      })\n      .then(() => {\n        console.log(\"success\")\n      }).catch((e)=>{console.log(e)})\n    })\n  };\n\n  const convid = () =>{\n    axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n      setAdd(response.data);\n    });\n  }\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const MapData = () =>{\n    // let date = \"\";\n    testData.map((val) => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n        data.push([\n          {\n            name: val.timeline,\n            values: [{ \n              id: 1,\n              label: val.country,\n              value: val.amount,\n              color: \"green\",\n            }],\n          },\n        ]);\n        // date = val.timeline;\n        console.log(1)\n      // }\n    });\n  }\n\n useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n      setTestData(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={MapData}>Check</button><button onClick={testconsole}>Check</button>\n      {<DynamicBarChart \n      data={data} \n      startAutomatically={false}\n      showStartButton={true}\n      startButtonText={'Click Me!'} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}