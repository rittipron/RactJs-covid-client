{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\"; // Don't forget to import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([{\n    name: \"Round 1\",\n    values: [{\n      id: 1,\n      label: \"Test 1\",\n      value: 0,\n      color: \"red\"\n    }, {\n      id: 2,\n      label: \"Test 2\",\n      value: 0,\n      color: \"yellow\"\n    }, {\n      id: 3,\n      label: \"Test 3\",\n      value: 0,\n      color: \"green\"\n    }]\n  }]);\n\n  const testconsole = () => {\n    console.log(testData); // testData.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     country: val.country,\n    //     timeline: \"4/10/21\",\n    //     amount: val.timeline.cases[\"4/10/21\"],\n    //   })\n    //   .then(() => {\n    //     console.log(\"success\")\n    //   }).catch((e)=>{console.log(e)})\n    // })\n  };\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  const MapData = data => {\n    let date = \"\";\n    data.map((val, key) => {\n      if (date == val.timeline) {\n        data.value.map((value, key) => {\n          setData([...data.values, {\n            id: value.id,\n            label: value.country,\n            value: value.amount,\n            color: {\n              getRandomColor\n            }\n          }]);\n        });\n        date = val.timeline;\n      } else {\n        setData([...data, {\n          name: val.timeline,\n          value: [{\n            id: val.id,\n            label: val.country,\n            value: val.amount,\n            color: {\n              getRandomColor\n            }\n          }]\n        }]);\n        date = val.age;\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(async response => {\n      await setTestData(response.data);\n      await MapData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      iterationTimeout: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DlYFORwQnlDQjIIqyrOEKrHsPH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","name","values","id","label","value","color","testconsole","console","log","getRandomColor","letters","i","Math","floor","random","MapData","date","map","val","key","timeline","country","amount","age","get","then","response"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\"; // Don't forget to import the styles\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([\n    {\n      name: \"Round 1\",\n      values: [\n        {\n          id: 1,\n          label: \"Test 1\",\n          value: 0,\n          color: \"red\",\n        },\n        {\n          id: 2,\n          label: \"Test 2\",\n          value: 0,\n          color: \"yellow\",\n        },\n        {\n          id: 3,\n          label: \"Test 3\",\n          value: 0,\n          color: \"green\",\n        },\n      ],\n    },\n  ]);\n\n  const testconsole = () => {\n    console.log(testData);\n    // testData.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     country: val.country,\n    //     timeline: \"4/10/21\",\n    //     amount: val.timeline.cases[\"4/10/21\"],\n    //   })\n    //   .then(() => {\n    //     console.log(\"success\")\n    //   }).catch((e)=>{console.log(e)})\n    // })\n  };\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const MapData = (data) =>{\n    let date = \"\";\n    data.map((val, key) => {\n      if (date == val.timeline) {\n        data.value.map((value, key) => {\n          setData([...data.values, { \n            id: value.id,\n            label: value.country,\n            value: value.amount,\n            color: {getRandomColor}, \n          }]);\n        });\n        date = val.timeline;\n      } else {\n        setData([\n          ...data,\n          {\n            name: val.timeline,\n            value: [{ \n              id: val.id,\n              label: val.country,\n              value: val.amount,\n              color: {getRandomColor},\n            }],\n          },\n        ]);\n        date = val.age;\n      }\n    });\n  }\n\n useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(async (response) => {\n      await setTestData(response.data);\n      await MapData(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={testconsole}>Check</button>\n      {<DynamicBarChart data={data} iterationTimeout={1000} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}