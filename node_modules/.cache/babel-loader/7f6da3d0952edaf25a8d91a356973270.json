{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add, setAdd] = useState([]);\n  const [covid, setCovid] = useState([{\n    name: \"Round 1\",\n    values: [{\n      id: 1,\n      label: \"Test 1\",\n      value: 0,\n      color: \"red\"\n    }, {\n      id: 2,\n      label: \"Test 2\",\n      value: 0,\n      color: \"yellow\"\n    }, {\n      id: 3,\n      label: \"Test 3\",\n      value: 0,\n      color: \"green\"\n    }]\n  }]);\n\n  const testconsole = () => {\n    console.log(data);\n    data[0].map((items, i) => {\n      console.log(items.values[0].id);\n    }); // add.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     id_country: 0,\n    //     country: val.country,\n    //     province: val.province,\n    //     timeline: '4/22/21',\n    //     amount: val.timeline.cases['4/22/21']\n    //   })\n    //   .then(() => {}).catch((e)=>{console.log(e)})\n    //   console.log(1)\n    // })\n    // update.map((val)=>{\n    //   axios.put(\"http://localhost:3001/updatecovidworld\", {\n    //       id_country: val.id_country,\n    //       country: val.country\n    //     })\n    //     .then(() => {}).catch((e)=>{console.log(e)})\n    //     console.log(1)\n    //   })\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(response => {\n      // setTestData(response.data);\n      let date = \"\";\n      response.data.map((val, i) => {\n        let color = getRandomColor();\n\n        if (date == val.timeline) {\n          let number = 0;\n          data[number].map((res, i) => {\n            res.values.push([{\n              id: val.id_country,\n              label: val.country,\n              value: val.amount,\n              color: {\n                color\n              }\n            }]);\n          });\n          number++;\n          date = val.timeline;\n        } else {\n          data.push([{\n            name: val.timeline,\n            values: [{\n              id: val.id_country,\n              label: val.country,\n              value: val.amount,\n              color: color\n            }]\n          }]);\n          date = val.timeline;\n        }\n      });\n    }); // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      startAutomatically: false,\n      showStartButton: true,\n      startButtonText: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dVHLJWyzCxgoPZB5nLU8WBpEOQM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","getRandomColor","letters","color","i","Math","floor","random","App","testData","setTestData","data","setData","add","setAdd","covid","setCovid","name","values","id","label","value","testconsole","console","log","map","items","get","then","response","date","val","timeline","number","res","push","id_country","country","amount"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add, setAdd] = useState([]);\n  const [covid, setCovid] = useState([\n    {\n      name: \"Round 1\",\n      values: [\n        {\n          id: 1,\n          label: \"Test 1\",\n          value: 0,\n          color: \"red\",\n        },\n        {\n          id: 2,\n          label: \"Test 2\",\n          value: 0,\n          color: \"yellow\",\n        },\n        {\n          id: 3,\n          label: \"Test 3\",\n          value: 0,\n          color: \"green\",\n        },\n      ],\n    },\n  ]);\n\n  const testconsole = () => {\n    console.log(data)\n    data[0].map((items,i)=>{\n      console.log(items.values[0].id);\n    })\n    // add.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     id_country: 0,\n    //     country: val.country,\n    //     province: val.province,\n    //     timeline: '4/22/21',\n    //     amount: val.timeline.cases['4/22/21']\n    //   })\n    //   .then(() => {}).catch((e)=>{console.log(e)})\n    //   console.log(1)\n    // })\n\n    // update.map((val)=>{\n    //   axios.put(\"http://localhost:3001/updatecovidworld\", {\n    //       id_country: val.id_country,\n    //       country: val.country\n    //     })\n    //     .then(() => {}).catch((e)=>{console.log(e)})\n    //     console.log(1)\n    //   })\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n      // setTestData(response.data);\n      let date = \"\";\n      response.data.map((val,i) => {\n      let color = getRandomColor();\n        if (date == val.timeline) {\n          let number = 0;\n          data[number].map((res,i)=>{\n            res.values.push([{\n                id: val.id_country,\n                label: val.country,\n                value: val.amount,\n                color: {color},\n            }])\n          })\n          number++\n          date = val.timeline;\n        } else {\n          data.push([\n            {\n              name: val.timeline,\n              values: [\n                {\n                  id: val.id_country,\n                  label: val.country,\n                  value: val.amount,\n                  color: color,\n                },\n              ],\n            },\n          ]);\n          date = val.timeline;\n        }\n      });\n    });\n    // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={testconsole}>Check</button>\n      <button onClick={testconsole}>Check</button>\n      {\n        <DynamicBarChart\n          data={data}\n          startAutomatically={false}\n          showStartButton={true}\n          startButtonText={\"Click Me!\"}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}