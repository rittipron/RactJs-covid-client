{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\"; // Don't forget to import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([// {\n    //   name: \"Round 1\",\n    //   values: [\n    //     {\n    //       id: 1,\n    //       label: \"Test 1\",\n    //       value: 0,\n    //       color: \"red\",\n    //     },\n    //     {\n    //       id: 2,\n    //       label: \"Test 2\",\n    //       value: 0,\n    //       color: \"yellow\",\n    //     },\n    //     {\n    //       id: 3,\n    //       label: \"Test 3\",\n    //       value: 0,\n    //       color: \"green\",\n    //     },\n    //   ],\n    // },\n  ]);\n\n  const testconsole = () => {\n    console.log(data); // testData.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     country: val.country,\n    //     timeline: \"4/10/21\",\n    //     amount: val.timeline.cases[\"4/10/21\"],\n    //   })\n    //   .then(() => {\n    //     console.log(\"success\")\n    //   }).catch((e)=>{console.log(e)})\n    // })\n  };\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  const MapData = () => {\n    let date = \"\";\n    console.log(testData);\n    data.map((val, key) => {\n      if (date == val.timeline) {\n        testData.value.map((value, key) => {\n          setData([...data.values, {\n            id: value.id,\n            label: value.country,\n            value: value.amount,\n            color: {\n              getRandomColor\n            }\n          }]);\n        });\n        date = val.timeline;\n        console.log(1);\n      } else {\n        setData([...data, {\n          name: val.timeline,\n          value: [{\n            id: val.id,\n            label: val.country,\n            value: val.amount,\n            color: {\n              getRandomColor\n            }\n          }]\n        }]);\n        date = val.timeline;\n        console.log(2);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(response => {\n      setTestData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: MapData,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: MapData,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      iterationTimeout: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4PHiReP46hsDGQ1wElCJdTb9tlQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","testconsole","console","log","getRandomColor","letters","color","i","Math","floor","random","MapData","date","map","val","key","timeline","value","values","id","label","country","amount","name","get","then","response"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\"; // Don't forget to import the styles\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([\n    // {\n    //   name: \"Round 1\",\n    //   values: [\n    //     {\n    //       id: 1,\n    //       label: \"Test 1\",\n    //       value: 0,\n    //       color: \"red\",\n    //     },\n    //     {\n    //       id: 2,\n    //       label: \"Test 2\",\n    //       value: 0,\n    //       color: \"yellow\",\n    //     },\n    //     {\n    //       id: 3,\n    //       label: \"Test 3\",\n    //       value: 0,\n    //       color: \"green\",\n    //     },\n    //   ],\n    // },\n  ]);\n\n  const testconsole = () => {\n    console.log(data);\n    // testData.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     country: val.country,\n    //     timeline: \"4/10/21\",\n    //     amount: val.timeline.cases[\"4/10/21\"],\n    //   })\n    //   .then(() => {\n    //     console.log(\"success\")\n    //   }).catch((e)=>{console.log(e)})\n    // })\n  };\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const MapData = () =>{\n    let date = \"\";\n    console.log(testData)\n    data.map((val, key) => {\n      if (date == val.timeline) {\n        testData.value.map((value, key) => {\n          setData([...data.values, { \n            id: value.id,\n            label: value.country,\n            value: value.amount,\n            color: {getRandomColor}, \n          }]);\n        });\n        date = val.timeline;\n        console.log(1)\n      } else {\n        setData([\n          ...data,\n          {\n            name: val.timeline,\n            value: [{ \n              id: val.id,\n              label: val.country,\n              value: val.amount,\n              color: {getRandomColor},\n            }],\n          },\n        ]);\n        date = val.timeline;\n        console.log(2)\n      }\n    });\n  }\n\n useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n      setTestData(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <button onClick={MapData}>Check</button><button onClick={MapData}>Check</button>\n      {<DynamicBarChart data={data} iterationTimeout={1000} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}