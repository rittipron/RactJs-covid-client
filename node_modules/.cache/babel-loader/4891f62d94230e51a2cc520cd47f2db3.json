{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Show() {\n  return /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n    data: dataCovide,\n    iterationTimeout: 1000\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Show;\n\nfunction App() {\n  _s();\n\n  const [dataCovide, setDataCovide] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/covidworld\").then(response => {\n      let res = response.data;\n      let date = \"\";\n      let i = -1;\n      res.map(val => {\n        if (date == val.timeline) {\n          dataCovide[i].values.push({\n            id: val.id_country,\n            label: val.country,\n            value: val.amount,\n            color: val.color\n          });\n          date = val.timeline;\n        } else {\n          dataCovide.push({\n            name: val.timeline,\n            values: [...dataCovide, {\n              id: val.id_country,\n              label: val.country,\n              value: val.amount,\n              color: val.color\n            }]\n          });\n          date = val.timeline;\n          i++;\n        }\n      });\n    }).then(() => {\n      console.log(\"Complie\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FXH79uHaaO3LIuhSOe1I6XTYIDQ=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Show\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","Show","dataCovide","App","setDataCovide","get","then","response","res","data","date","i","map","val","timeline","values","push","id","id_country","label","country","value","amount","color","name","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,qCAAP;;;AAEA,SAASC,IAAT,GAAe;AACX,sBAAO,QAAC,eAAD;AACP,IAAA,IAAI,EAAEC,UADC;AAEP,IAAA,gBAAgB,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;KALQD,I;;AAOT,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACD,UAAD,EAAaE,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFM,GADH,CACO,kCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,CAAC,GAAG,CAAC,CAAT;AACAH,MAAAA,GAAG,CAACI,GAAJ,CAASC,GAAD,IAAS;AACf,YAAIH,IAAI,IAAIG,GAAG,CAACC,QAAhB,EAA0B;AACxBZ,UAAAA,UAAU,CAACS,CAAD,CAAV,CAAcI,MAAd,CAAqBC,IAArB,CAA0B;AACxBC,YAAAA,EAAE,EAAEJ,GAAG,CAACK,UADgB;AAExBC,YAAAA,KAAK,EAAEN,GAAG,CAACO,OAFa;AAGxBC,YAAAA,KAAK,EAAER,GAAG,CAACS,MAHa;AAIxBC,YAAAA,KAAK,EAAEV,GAAG,CAACU;AAJa,WAA1B;AAMAb,UAAAA,IAAI,GAAGG,GAAG,CAACC,QAAX;AACD,SARD,MAQO;AACLZ,UAAAA,UAAU,CAACc,IAAX,CAAgB;AACdQ,YAAAA,IAAI,EAAEX,GAAG,CAACC,QADI;AAEdC,YAAAA,MAAM,EAAE,CACN,GAAGb,UADG,EAEN;AACEe,cAAAA,EAAE,EAAEJ,GAAG,CAACK,UADV;AAEEC,cAAAA,KAAK,EAAEN,GAAG,CAACO,OAFb;AAGEC,cAAAA,KAAK,EAAER,GAAG,CAACS,MAHb;AAIEC,cAAAA,KAAK,EAAEV,GAAG,CAACU;AAJb,aAFM;AAFM,WAAhB;AAYAb,UAAAA,IAAI,GAAGG,GAAG,CAACC,QAAX;AACAH,UAAAA,CAAC;AACF;AACF,OAzBD;AA0BD,KAhCH,EAiCGL,IAjCH,CAiCQ,MAAM;AACVmB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAnCH;AAoCD,GArCQ,EAqCN,EArCM,CAAT;AAuCA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjDQvB,G;;MAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction Show(){\n    return <DynamicBarChart\n    data={dataCovide}\n    iterationTimeout={1000}\n    />\n}\n\nfunction App() {\n  const [dataCovide, setDataCovide] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/covidworld\")\n      .then((response) => {\n        let res = response.data;\n        let date = \"\";\n        let i = -1;\n        res.map((val) => {\n          if (date == val.timeline) {\n            dataCovide[i].values.push({\n              id: val.id_country,\n              label: val.country,\n              value: val.amount,\n              color: val.color,\n            });\n            date = val.timeline;\n          } else {\n            dataCovide.push({\n              name: val.timeline,\n              values: [\n                ...dataCovide,\n                {\n                  id: val.id_country,\n                  label: val.country,\n                  value: val.amount,\n                  color: val.color,\n                },\n              ],\n            });\n            date = val.timeline;\n            i++;\n          }\n        });\n      })\n      .then(() => {\n        console.log(\"Complie\")\n      });\n  }, []);\n\n  return (\n    <div>\n      { \n        \n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}