{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Project/covid-19/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add, setAdd] = useState([]);\n  const [update, setUpdate] = useState([{\n    id_country: 107,\n    country: \"Cyprus\"\n  }, {\n    id_country: 137,\n    country: \"Czechia\"\n  }, {\n    id_country: 138,\n    country: \"Denmark\"\n  }, {\n    id_country: 139,\n    country: \"Diamond Princess\"\n  }, {\n    id_country: 140,\n    country: \"Djibouti\"\n  }, {\n    id_country: 141,\n    country: \"Dominica\"\n  }, {\n    id_country: 142,\n    country: \"Dominican Republic\"\n  }, {\n    id_country: 143,\n    country: \"Ecuador\"\n  }, {\n    id_country: 144,\n    country: \"Egypt\"\n  }, {\n    id_country: 145,\n    country: \"El Salvador\"\n  }, {\n    id_country: 146,\n    country: \"Equatorial Guinea\"\n  }, {\n    id_country: 147,\n    country: \"Eritrea\"\n  }, {\n    id_country: 148,\n    country: \"Estonia\"\n  }, {\n    id_country: 149,\n    country: \"Swaziland\"\n  }, {\n    id_country: 150,\n    country: \"Ethiopia\"\n  }, {\n    id_country: 151,\n    country: \"Fiji\"\n  }, {\n    id_country: 152,\n    country: \"Finland\"\n  }, {\n    id_country: 153,\n    country: \"Gabon\"\n  }, {\n    id_country: 154,\n    country: \"Gambia\"\n  }, {\n    id_country: 155,\n    country: \"Georgia\"\n  }, {\n    id_country: 156,\n    country: \"Germany\"\n  }, {\n    id_country: 157,\n    country: \"Ghana\"\n  }, {\n    id_country: 158,\n    country: \"Greece\"\n  }, {\n    id_country: 159,\n    country: \"Grenada\"\n  }, {\n    id_country: 160,\n    country: \"Guatemala\"\n  }, {\n    id_country: 161,\n    country: \"Guinea\"\n  }, {\n    id_country: 162,\n    country: \"Guinea-Bissau\"\n  }, {\n    id_country: 163,\n    country: \"Guyana\"\n  }, {\n    id_country: 164,\n    country: \"Haiti\"\n  }, {\n    id_country: 165,\n    country: \"Holy See\"\n  }, {\n    id_country: 166,\n    country: \"Honduras\"\n  }, {\n    id_country: 167,\n    country: \"Hungary\"\n  }, {\n    id_country: 168,\n    country: \"Iceland\"\n  }, {\n    id_country: 169,\n    country: \"India\"\n  }, {\n    id_country: 170,\n    country: \"Indonesia\"\n  }, {\n    id_country: 171,\n    country: \"Iran\"\n  }, {\n    id_country: 172,\n    country: \"Iraq\"\n  }, {\n    id_country: 173,\n    country: \"Ireland\"\n  }, {\n    id_country: 174,\n    country: \"Israel\"\n  }, {\n    id_country: 175,\n    country: \"Italy\"\n  }, {\n    id_country: 176,\n    country: \"Jamaica\"\n  }, {\n    id_country: 177,\n    country: \"Japan\"\n  }, {\n    id_country: 178,\n    country: \"Jordan\"\n  }, {\n    id_country: 179,\n    country: \"Kazakhstan\"\n  }, {\n    id_country: 180,\n    country: \"Kenya\"\n  }, {\n    id_country: 181,\n    country: \"S. Korea\"\n  }, {\n    id_country: 182,\n    country: \"Kosovo\"\n  }, {\n    id_country: 183,\n    country: \"Kuwait\"\n  }, {\n    id_country: 184,\n    country: \"Kyrgyzstan\"\n  }, {\n    id_country: 185,\n    country: \"Lao People's Democratic Republic\"\n  }, {\n    id_country: 186,\n    country: \"Latvia\"\n  }, {\n    id_country: 187,\n    country: \"Lebanon\"\n  }, {\n    id_country: 188,\n    country: \"Lesotho\"\n  }, {\n    id_country: 189,\n    country: \"Liberia\"\n  }, {\n    id_country: 190,\n    country: \"Libyan Arab Jamahiriya\"\n  }, {\n    id_country: 191,\n    country: \"Liechtenstein\"\n  }, {\n    id_country: 192,\n    country: \"Lithuania\"\n  }, {\n    id_country: 193,\n    country: \"Luxembourg\"\n  }, {\n    id_country: 194,\n    country: \"MS Zaandam\"\n  }, {\n    id_country: 195,\n    country: \"Madagascar\"\n  }, {\n    id_country: 196,\n    country: \"Malawi\"\n  }, {\n    id_country: 197,\n    country: \"Malaysia\"\n  }, {\n    id_country: 198,\n    country: \"Maldives\"\n  }, {\n    id_country: 199,\n    country: \"Mali\"\n  }, {\n    id_country: 200,\n    country: \"Malta\"\n  }, {\n    id_country: 201,\n    country: \"Marshall Islands\"\n  }, {\n    id_country: 202,\n    country: \"Mauritania\"\n  }, {\n    id_country: 203,\n    country: \"Mauritius\"\n  }, {\n    id_country: 204,\n    country: \"Mexico\"\n  }, {\n    id_country: 205,\n    country: \"Micronesia\"\n  }, {\n    id_country: 206,\n    country: \"Moldova\"\n  }, {\n    id_country: 207,\n    country: \"Monaco\"\n  }, {\n    id_country: 208,\n    country: \"Mongolia\"\n  }, {\n    id_country: 209,\n    country: \"Montenegro\"\n  }, {\n    id_country: 210,\n    country: \"Morocco\"\n  }, {\n    id_country: 211,\n    country: \"Mozambique\"\n  }, {\n    id_country: 212,\n    country: \"Namibia\"\n  }, {\n    id_country: 213,\n    country: \"Nepal\"\n  }, {\n    id_country: 214,\n    country: \"New Zealand\"\n  }, {\n    id_country: 215,\n    country: \"Nicaragua\"\n  }, {\n    id_country: 216,\n    country: \"Niger\"\n  }, {\n    id_country: 217,\n    country: \"Nigeria\"\n  }, {\n    id_country: 218,\n    country: \"Macedonia\"\n  }, {\n    id_country: 219,\n    country: \"Norway\"\n  }, {\n    id_country: 220,\n    country: \"Oman\"\n  }, {\n    id_country: 221,\n    country: \"Pakistan\"\n  }, {\n    id_country: 222,\n    country: \"Panama\"\n  }, {\n    id_country: 223,\n    country: \"Papua New Guinea\"\n  }, {\n    id_country: 224,\n    country: \"Paraguay\"\n  }, {\n    id_country: 225,\n    country: \"Peru\"\n  }, {\n    id_country: 226,\n    country: \"Philippines\"\n  }, {\n    id_country: 227,\n    country: \"Poland\"\n  }, {\n    id_country: 228,\n    country: \"Portugal\"\n  }, {\n    id_country: 229,\n    country: \"Qatar\"\n  }, {\n    id_country: 230,\n    country: \"Romania\"\n  }, {\n    id_country: 231,\n    country: \"Russia\"\n  }, {\n    id_country: 232,\n    country: \"Rwanda\"\n  }, {\n    id_country: 233,\n    country: \"Saint Kitts and Nevis\"\n  }, {\n    id_country: 234,\n    country: \"Saint Lucia\"\n  }, {\n    id_country: 235,\n    country: \"Saint Vincent and the Grenadines\"\n  }, {\n    id_country: 236,\n    country: \"Samoa\"\n  }, {\n    id_country: 237,\n    country: \"San Marino\"\n  }, {\n    id_country: 238,\n    country: \"Sao Tome and Principe\"\n  }, {\n    id_country: 239,\n    country: \"Saudi Arabia\"\n  }, {\n    id_country: 240,\n    country: \"Senegal\"\n  }, {\n    id_country: 241,\n    country: \"Serbia\"\n  }, {\n    id_country: 242,\n    country: \"Seychelles\"\n  }, {\n    id_country: 243,\n    country: \"Sierra Leone\"\n  }, {\n    id_country: 244,\n    country: \"Singapore\"\n  }, {\n    id_country: 245,\n    country: \"Slovakia\"\n  }, {\n    id_country: 246,\n    country: \"Slovenia\"\n  }, {\n    id_country: 247,\n    country: \"Solomon Islands\"\n  }, {\n    id_country: 248,\n    country: \"Somalia\"\n  }, {\n    id_country: 249,\n    country: \"South Africa\"\n  }, {\n    id_country: 250,\n    country: \"South Sudan\"\n  }, {\n    id_country: 251,\n    country: \"Spain\"\n  }, {\n    id_country: 252,\n    country: \"Sri Lanka\"\n  }, {\n    id_country: 253,\n    country: \"Sudan\"\n  }, {\n    id_country: 254,\n    country: \"Suriname\"\n  }, {\n    id_country: 255,\n    country: \"Sweden\"\n  }, {\n    id_country: 256,\n    country: \"Switzerland\"\n  }, {\n    id_country: 257,\n    country: \"Syrian Arab Republic\"\n  }, {\n    id_country: 258,\n    country: \"Taiwan\"\n  }, {\n    id_country: 259,\n    country: \"Tajikistan\"\n  }, {\n    id_country: 260,\n    country: \"Tanzania\"\n  }, {\n    id_country: 261,\n    country: \"Thailand\"\n  }, {\n    id_country: 262,\n    country: \"Timor-Leste\"\n  }, {\n    id_country: 263,\n    country: \"Togo\"\n  }, {\n    id_country: 264,\n    country: \"Trinidad and Tobago\"\n  }, {\n    id_country: 265,\n    country: \"Tunisia\"\n  }, {\n    id_country: 266,\n    country: \"Turkey\"\n  }, {\n    id_country: 267,\n    country: \"USA\"\n  }, {\n    id_country: 268,\n    country: \"Uganda\"\n  }, {\n    id_country: 269,\n    country: \"Ukraine\"\n  }, {\n    id_country: 270,\n    country: \"UAE\"\n  }, {\n    id_country: 271,\n    country: \"Uruguay\"\n  }, {\n    id_country: 272,\n    country: \"Uzbekistan\"\n  }, {\n    id_country: 273,\n    country: \"Vanuatu\"\n  }, {\n    id_country: 274,\n    country: \"Venezuela\"\n  }, {\n    id_country: 275,\n    country: \"Vietnam\"\n  }, {\n    id_country: 276,\n    country: \"West Bank and Gaza\"\n  }, {\n    id_country: 277,\n    country: \"Yemen\"\n  }, {\n    id_country: 278,\n    country: \"Zambia\"\n  }, {\n    id_country: 279,\n    country: \"Zimbabwe\"\n  }]);\n  const [covid, setCovid] = useState([{\n    name: \"Round 1\",\n    values: [{\n      id: 1,\n      label: \"Test 1\",\n      value: 0,\n      color: \"red\"\n    }, {\n      id: 2,\n      label: \"Test 2\",\n      value: 0,\n      color: \"yellow\"\n    }, {\n      id: 3,\n      label: \"Test 3\",\n      value: 0,\n      color: \"green\"\n    }]\n  }]);\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  const MapData = () => {\n    // let date = \"\";\n    testData.map(val => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n      data.push([{\n        name: val.timeline,\n        values: [{\n          id: 1,\n          label: val.country,\n          value: val.amount,\n          color: \"green\"\n        }]\n      }]); // date = val.timeline;\n\n      console.log(1); // }\n    });\n  };\n\n  const testconsole = () => {\n    // console.log(add);\n    // add.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     id_country: 0,\n    //     country: val.country,\n    //     province: val.province,\n    //     timeline: '4/22/21',\n    //     amount: val.timeline.cases['4/22/21']\n    //   })\n    //   .then(() => {}).catch((e)=>{console.log(e)})\n    //   console.log(1)\n    // })\n    update.map(val => {\n      axios.put(\"http://localhost:3001/updatecovidworld\", {\n        id_country: val.id_country,\n        country: val.country\n      }).then(() => {}).catch(e => {\n        console.log(e);\n      });\n      console.log(1);\n    });\n  };\n\n  useEffect(() => {\n    // axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n    //   setTestData(response.data);\n    // });\n    // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n    console.log(update);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testconsole,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(DynamicBarChart, {\n      data: data,\n      startAutomatically: false,\n      showStartButton: true,\n      startButtonText: 'Click Me!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 658,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uKDQ35r3VWKaI9tnpzyIM0Z/x0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paul/Project/covid-19/client/src/App.js"],"names":["useState","useEffect","axios","DynamicBarChart","App","testData","setTestData","data","setData","add","setAdd","update","setUpdate","id_country","country","covid","setCovid","name","values","id","label","value","color","getRandomColor","letters","i","Math","floor","random","MapData","map","val","push","timeline","amount","console","log","testconsole","put","then","catch","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { DynamicBarChart } from \"react-dynamic-charts\";\nimport \"react-dynamic-charts/dist/index.css\";\n\nfunction App() {\n  const [testData, setTestData] = useState([]);\n  const [data, setData] = useState([]);\n  const [add , setAdd] = useState([]);\n  const [update , setUpdate] = useState([\n    {\n      id_country: 107,\n      country:\"Cyprus\"\n    },\n    {\n      id_country: 137,\n      country:\"Czechia\"\n    },\n    {\n      id_country: 138,\n      country:\"Denmark\"\n    },\n    {\n      id_country: 139,\n      country:\"Diamond Princess\"\n    },\n    {\n      id_country: 140,\n      country:\"Djibouti\"\n    },{\n      id_country: 141,\n      country:\"Dominica\"\n    },\n    {\n      id_country: 142,\n      country:\"Dominican Republic\"\n    },\n    {\n      id_country: 143,\n      country:\"Ecuador\"\n    },\n    {\n      id_country: 144,\n      country:\"Egypt\"\n    },{\n      id_country: 145,\n      country:\"El Salvador\"\n    },\n    {\n      id_country: 146,\n      country:\"Equatorial Guinea\"\n    },\n    {\n      id_country: 147,\n      country:\"Eritrea\"\n    },\n    {\n      id_country: 148,\n      country:\"Estonia\"\n    },{\n      id_country: 149,\n      country:\"Swaziland\"\n    },\n    {\n      id_country: 150,\n      country:\"Ethiopia\"\n    },\n    {\n      id_country: 151,\n      country:\"Fiji\"\n    },\n    {\n      id_country: 152,\n      country:\"Finland\"\n    },{\n      id_country: 153,\n      country:\"Gabon\"\n    },\n    {\n      id_country: 154,\n      country:\"Gambia\"\n    },\n    {\n      id_country: 155,\n      country:\"Georgia\"\n    },\n    {\n      id_country: 156,\n      country:\"Germany\"\n    },{\n      id_country: 157,\n      country:\"Ghana\"\n    },\n    {\n      id_country: 158,\n      country:\"Greece\"\n    },\n    {\n      id_country: 159,\n      country:\"Grenada\"\n    },\n    {\n      id_country: 160,\n      country:\"Guatemala\"\n    },{\n      id_country: 161,\n      country:\"Guinea\"\n    },\n    {\n      id_country: 162,\n      country:\"Guinea-Bissau\"\n    },\n    {\n      id_country: 163,\n      country:\"Guyana\"\n    },\n    {\n      id_country: 164,\n      country:\"Haiti\"\n    },{\n      id_country: 165,\n      country:\"Holy See\"\n    },\n    {\n      id_country: 166,\n      country:\"Honduras\"\n    },\n    {\n      id_country: 167,\n      country:\"Hungary\"\n    },\n    {\n      id_country: 168,\n      country:\"Iceland\"\n    },{\n      id_country: 169,\n      country:\"India\"\n    },\n    {\n      id_country: 170,\n      country:\"Indonesia\"\n    },\n    {\n      id_country: 171,\n      country:\"Iran\"\n    },\n    {\n      id_country: 172,\n      country:\"Iraq\"\n    },{\n      id_country: 173,\n      country:\"Ireland\"\n    },\n    {\n      id_country: 174,\n      country:\"Israel\"\n    },\n    {\n      id_country: 175,\n      country:\"Italy\"\n    },\n    {\n      id_country: 176,\n      country:\"Jamaica\"\n    },{\n      id_country: 177,\n      country:\"Japan\"\n    },\n    {\n      id_country: 178,\n      country:\"Jordan\"\n    },\n    {\n      id_country: 179,\n      country:\"Kazakhstan\"\n    },\n    {\n      id_country: 180,\n      country:\"Kenya\"\n    },{\n      id_country: 181,\n      country:\"S. Korea\"\n    },\n    {\n      id_country: 182,\n      country:\"Kosovo\"\n    },\n    {\n      id_country: 183,\n      country:\"Kuwait\"\n    },\n    {\n      id_country: 184,\n      country:\"Kyrgyzstan\"\n    },{\n      id_country: 185,\n      country:\"Lao People's Democratic Republic\"\n    },\n    {\n      id_country: 186,\n      country:\"Latvia\"\n    },\n    {\n      id_country: 187,\n      country:\"Lebanon\"\n    },\n    {\n      id_country: 188,\n      country:\"Lesotho\"\n    },{\n      id_country: 189,\n      country:\"Liberia\"\n    },\n    {\n      id_country: 190,\n      country:\"Libyan Arab Jamahiriya\"\n    },\n    {\n      id_country: 191,\n      country:\"Liechtenstein\"\n    },\n    {\n      id_country: 192,\n      country:\"Lithuania\"\n    },{\n      id_country: 193,\n      country:\"Luxembourg\"\n    },\n    {\n      id_country: 194,\n      country:\"MS Zaandam\"\n    },\n    {\n      id_country: 195,\n      country:\"Madagascar\"\n    },\n    {\n      id_country: 196,\n      country:\"Malawi\"\n    },{\n      id_country: 197,\n      country:\"Malaysia\"\n    },\n    {\n      id_country: 198,\n      country:\"Maldives\"\n    },\n    {\n      id_country: 199,\n      country:\"Mali\"\n    },\n    {\n      id_country: 200,\n      country:\"Malta\"\n    },{\n      id_country: 201,\n      country:\"Marshall Islands\"\n    },\n    {\n      id_country: 202,\n      country:\"Mauritania\"\n    },\n    {\n      id_country: 203,\n      country:\"Mauritius\"\n    },\n    {\n      id_country: 204,\n      country:\"Mexico\"\n    },{\n      id_country: 205,\n      country:\"Micronesia\"\n    },\n    {\n      id_country: 206,\n      country:\"Moldova\"\n    },\n    {\n      id_country: 207,\n      country:\"Monaco\"\n    },\n    {\n      id_country: 208,\n      country:\"Mongolia\"\n    },{\n      id_country: 209,\n      country:\"Montenegro\"\n    },\n    {\n      id_country: 210,\n      country:\"Morocco\"\n    },\n    {\n      id_country: 211,\n      country:\"Mozambique\"\n    },\n    {\n      id_country: 212,\n      country:\"Namibia\"\n    },{\n      id_country: 213,\n      country:\"Nepal\"\n    },\n    {\n      id_country: 214,\n      country:\"New Zealand\"\n    },\n    {\n      id_country: 215,\n      country:\"Nicaragua\"\n    },\n    {\n      id_country: 216,\n      country:\"Niger\"\n    },{\n      id_country: 217,\n      country:\"Nigeria\"\n    },\n    {\n      id_country: 218,\n      country:\"Macedonia\"\n    },\n    {\n      id_country: 219,\n      country:\"Norway\"\n    },\n    {\n      id_country: 220,\n      country:\"Oman\"\n    },{\n      id_country: 221,\n      country:\"Pakistan\"\n    },\n    {\n      id_country: 222,\n      country:\"Panama\"\n    },\n    {\n      id_country: 223,\n      country:\"Papua New Guinea\"\n    },\n    {\n      id_country: 224,\n      country:\"Paraguay\"\n    },{\n      id_country: 225,\n      country:\"Peru\"\n    },\n    {\n      id_country: 226,\n      country:\"Philippines\"\n    },\n    {\n      id_country: 227,\n      country:\"Poland\"\n    },\n    {\n      id_country: 228,\n      country:\"Portugal\"\n    },{\n      id_country: 229,\n      country:\"Qatar\"\n    },\n    {\n      id_country: 230,\n      country:\"Romania\"\n    },\n    {\n      id_country: 231,\n      country:\"Russia\"\n    },\n    {\n      id_country: 232,\n      country:\"Rwanda\"\n    },{\n      id_country: 233,\n      country:\"Saint Kitts and Nevis\"\n    },\n    {\n      id_country: 234,\n      country:\"Saint Lucia\"\n    },\n    {\n      id_country: 235,\n      country:\"Saint Vincent and the Grenadines\"\n    },\n    {\n      id_country: 236,\n      country:\"Samoa\"\n    },{\n      id_country: 237,\n      country:\"San Marino\"\n    },\n    {\n      id_country: 238,\n      country:\"Sao Tome and Principe\"\n    },{\n      id_country: 239,\n      country:\"Saudi Arabia\"\n    },\n    {\n      id_country: 240,\n      country:\"Senegal\"\n    },\n    {\n      id_country: 241,\n      country:\"Serbia\"\n    },\n    {\n      id_country: 242,\n      country:\"Seychelles\"\n    },{\n      id_country: 243,\n      country:\"Sierra Leone\"\n    },\n    {\n      id_country: 244,\n      country:\"Singapore\"\n    },{\n      id_country: 245,\n      country:\"Slovakia\"\n    },\n    {\n      id_country: 246,\n      country:\"Slovenia\"\n    },\n    {\n      id_country: 247,\n      country:\"Solomon Islands\"\n    },\n    {\n      id_country: 248,\n      country:\"Somalia\"\n    },{\n      id_country: 249,\n      country:\"South Africa\"\n    },\n    {\n      id_country: 250,\n      country:\"South Sudan\"\n    },{\n      id_country: 251,\n      country:\"Spain\"\n    },\n    {\n      id_country: 252,\n      country:\"Sri Lanka\"\n    },\n    {\n      id_country: 253,\n      country:\"Sudan\"\n    },\n    {\n      id_country: 254,\n      country:\"Suriname\"\n    },{\n      id_country: 255,\n      country:\"Sweden\"\n    },\n    {\n      id_country: 256,\n      country:\"Switzerland\"\n    },{\n      id_country: 257,\n      country:\"Syrian Arab Republic\"\n    },\n    {\n      id_country: 258,\n      country:\"Taiwan\"\n    },\n    {\n      id_country: 259,\n      country:\"Tajikistan\"\n    },\n    {\n      id_country: 260,\n      country:\"Tanzania\"\n    },\n    {\n      id_country: 261,\n      country:\"Thailand\"\n    },\n    {\n      id_country: 262,\n      country:\"Timor-Leste\"\n    },\n    {\n      id_country: 263,\n      country:\"Togo\"\n    },\n    {\n      id_country: 264,\n      country:\"Trinidad and Tobago\"\n    },\n    {\n      id_country: 265,\n      country:\"Tunisia\"\n    },\n    {\n      id_country: 266,\n      country:\"Turkey\"\n    },\n    {\n      id_country: 267,\n      country:\"USA\"\n    },\n    {\n      id_country: 268,\n      country:\"Uganda\"\n    },\n    {\n      id_country: 269,\n      country:\"Ukraine\"\n    },{\n      id_country: 270,\n      country:\"UAE\"\n    },\n    {\n      id_country: 271,\n      country:\"Uruguay\"\n    },\n    {\n      id_country: 272,\n      country:\"Uzbekistan\"\n    },{\n      id_country: 273,\n      country:\"Vanuatu\"\n    },\n    {\n      id_country: 274,\n      country:\"Venezuela\"\n    },\n    {\n      id_country: 275,\n      country:\"Vietnam\"\n    },\n    {\n      id_country: 276,\n      country:\"West Bank and Gaza\"\n    },\n    {\n      id_country: 277,\n      country:\"Yemen\"\n    },\n    {\n      id_country: 278,\n      country:\"Zambia\"\n    },\n    {\n      id_country: 279,\n      country:\"Zimbabwe\"\n    }\n  ]);\n  const [covid, setCovid] = useState([\n    {\n      name: \"Round 1\",\n      values: [\n        {\n          id: 1,\n          label: \"Test 1\",\n          value: 0,\n          color: \"red\",\n        },\n        {\n          id: 2,\n          label: \"Test 2\",\n          value: 0,\n          color: \"yellow\",\n        },\n        {\n          id: 3,\n          label: \"Test 3\",\n          value: 0,\n          color: \"green\",\n        },\n      ],\n    }\n  ]);\n\n\n  const getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const MapData = () =>{\n    // let date = \"\";\n    testData.map((val) => {\n      // if (date == val.timeline) {\n      //     setData([...data, { value:{\n      //       id: val.id,\n      //       label: val.country,\n      //       value: val.amount,\n      //       color: \"green\", \n      //     }\n      //     }]);\n      //   date = val.timeline;\n      //   console.log(date)\n      // } else {\n        data.push([\n          {\n            name: val.timeline,\n            values: [{ \n              id: 1,\n              label: val.country,\n              value: val.amount,\n              color: \"green\",\n            }],\n          },\n        ]);\n        // date = val.timeline;\n        console.log(1)\n      // }\n    });\n  }\n\n  const testconsole = () => {\n    // console.log(add);\n    // add.map((val)=>{\n    // axios.post(\"http://localhost:3001/createcovidworld\", {\n    //     id_country: 0,\n    //     country: val.country,\n    //     province: val.province,\n    //     timeline: '4/22/21',\n    //     amount: val.timeline.cases['4/22/21']\n    //   })\n    //   .then(() => {}).catch((e)=>{console.log(e)})\n    //   console.log(1)\n    // })\n\n    update.map((val)=>{\n      axios.put(\"http://localhost:3001/updatecovidworld\", {\n          id_country: val.id_country,\n          country: val.country\n        })\n        .then(() => {}).catch((e)=>{console.log(e)})\n        console.log(1)\n      })\n  };\n\n useEffect(() => {\n    // axios.get(\"http://localhost:3001/covidworld\").then((response) => {\n    //   setTestData(response.data);\n    // });\n    // axios.get(\"https://disease.sh/v3/covid-19/historical\").then((response) => {\n    //   setAdd(response.data);\n    //   console.log('4/22/21')\n    // });\n    console.log(update)\n  }, []);\n\n  return (\n    <div>\n      <button onClick={testconsole}>Check</button><button onClick={testconsole}>Check</button>\n      {<DynamicBarChart \n      data={data} \n      startAutomatically={false}\n      showStartButton={true}\n      startButtonText={'Click Me!'} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}