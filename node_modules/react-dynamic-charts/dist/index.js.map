{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color;\n};\n\nfunction DynamicBarChart(props) {\n  const [dataQueue, setDataQueue] = useState([]);\n  const [activeItemIdx, setActiveItemIdx] = useState(0);\n  const [highestValue, setHighestValue] = useState(0);\n  const [currentValues, setCurrentValues] = useState({});\n  const [firstRun, setFirstRun] = useState(false);\n  const [afterClick, setAfterClick] = useState(false);\n  let iterationTimeoutHolder = null;\n\n  function start() {\n    if (activeItemIdx > 1) {\n      return;\n    }\n    if (props.onRunStart) {\n      props.onRunStart();\n    }\n    nextStep(true);\n  }\n\n  function setNextValues() {\n    if (!dataQueue[activeItemIdx]) {\n      iterationTimeoutHolder = null;\n      if (props.onRunEnd) {\n        props.onRunEnd();\n      }\n      return;\n    }\n\n    const roundData = dataQueue[activeItemIdx].values;\n    const nextValues = {};\n    let highestValue = 0;\n    roundData.map((c) => {\n      nextValues[c.id] = {\n        ...c,\n        color: c.color || (currentValues[c.id] || {}).color || getRandomColor()\n      };\n\n      if (Math.abs(c.value) > highestValue) {\n        highestValue = Math.abs(c.value);\n      }\n\n      return c;\n    });\n\n    setCurrentValues(nextValues);\n    setHighestValue(highestValue);\n    setActiveItemIdx(activeItemIdx + 1);\n  }\n\n  function nextStep(firstRun = false) {\n    setFirstRun(firstRun);\n    setNextValues();\n  }\n\n  useEffect(() => {\n    setDataQueue(props.data);\n  }, []);\n\n  useEffect(() => {\n    if (props.startAutomatically) {\n      start();\n    } else {\n      setNextValues();\n    }\n  }, [dataQueue]);\n\n  useEffect(() => {\n    if (props.startAutomatically || afterClick) {\n      iterationTimeoutHolder = window.setTimeout(nextStep, firstRun ? props.startRunningTimeout : props.iterationTimeout);\n    }\n\n    return () => {\n      if (iterationTimeoutHolder) {\n        window.clearTimeout(iterationTimeoutHolder);\n      }\n    };\n  }, [activeItemIdx, afterClick]);\n\n  const { barHeight, baseline, iterationTimeout, chartWrapperStyles, mainWrapperStyles, iterationTitleStyles, labelStyles, baselineStyles, showTitle } = props;\n  const maxValue = highestValue / 0.85;\n  const sortedCurrentValues = Object.keys(currentValues).sort((a, b) => currentValues[b].value - currentValues[a].value);\n  const hasBaseline = baseline !== null && !isNaN(baseline);\n  const currentItem = dataQueue[activeItemIdx - 1] || {};\n\n  return (\n    <div className=\"live-chart\" style={mainWrapperStyles}>\n      {\n        <React.Fragment>\n          {\n            showTitle &&\n            <h1 style={iterationTitleStyles}>{currentItem.name}</h1>\n          }\n          <section className=\"chart\" style={chartWrapperStyles}>\n            {\n              hasBaseline &&\n              <div className=\"baseline\" style={baselineStyles}><span>{baseline}</span></div>\n            }\n            <div className={`chart-bars ${hasBaseline ? 'with-baseline' : ''}`} style={{ height: (barHeight + 20) * Object.keys(currentValues).length }}>\n              {\n                sortedCurrentValues.map((key, idx) => {\n                  const currentValueData = currentValues[key];\n                  const value = hasBaseline ? (currentValueData.value || baseline) - baseline : currentValueData.value;\n                  let width = Math.abs((value / maxValue * 100));\n                  let behindbaseline = false;\n                  if (hasBaseline && currentValueData.value < baseline) {\n                    behindbaseline = true;\n                  }\n\n                  if (hasBaseline) {\n                    width = width / 2;\n                  }\n\n                  let widthStr;\n                  if (isNaN(width) || !width) {\n                    widthStr = '1px';\n                  } else {\n                    widthStr = `${width}%`;\n                  }\n\n                  return (\n                    <div className={`bar-wrapper ${behindbaseline ? 'behind-baseline' : ''}`} style={{ top: (barHeight + 20) * idx, transitionDuration: iterationTimeout / 1000 }} key={`bar_${key}`}>\n                      <label style={labelStyles}>\n                        {\n                          !currentValueData.label\n                            ? key\n                            : currentValueData.label\n                        }\n                      </label>\n                      <div className=\"bar\" style={{ height: barHeight, width: widthStr, background: typeof currentValueData.color === 'string' ? currentValueData.color : `linear-gradient(to right, ${currentValueData.color.join(',')})` }} />\n                      <span className=\"value\" style={{ color: typeof currentValueData.color === 'string' ? currentValueData.color : currentValueData.color[0] }}>{currentValueData.value}</span>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </section>\n        </React.Fragment>\n      }\n      {\n        props.showStartButton &&\n        <button className=\"start-button\" onClick={() => setAfterClick(true)} style={props.startButtonStyles}>{props.startButtonText}</button>\n      }\n    </div>\n  );\n};\n\nDynamicBarChart.propTypes = {\n  startAutomatically: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  iterationTimeout: PropTypes.number,\n  data: PropTypes.array,\n  startRunningTimeout: PropTypes.number,\n  barHeight: PropTypes.number,\n  baseline: PropTypes.number,\n  showStartButton: PropTypes.bool,\n  startButtonText: PropTypes.string,\n  mainWrapperStyles: PropTypes.object,\n  chartWrapperStyles: PropTypes.object,\n  baselineStyles: PropTypes.object,\n  iterationTitleStyles: PropTypes.object,\n  labelStyles: PropTypes.object,\n  startButtonStyles: PropTypes.object,\n  onRunStart: PropTypes.func,\n  onRunEnd: PropTypes.func\n};\n\nDynamicBarChart.defaultProps = {\n  startAutomatically: true,\n  showTitle: true,\n  iterationTimeout: 200,\n  data: [],\n  startRunningTimeout: 0,\n  barHeight: 50,\n  baseline: null,\n  showStartButton: false,\n  startButtonText: 'Start',\n  mainWrapperStyles: {},\n  chartWrapperStyles: {},\n  baselineStyles: {},\n  iterationTitleStyles: {},\n  labelStyles: {},\n  startButtonStyles: {},\n  onRunStart: null,\n  onRunEnd: null\n};\n\nexport {\n  DynamicBarChart\n};\n"],"names":["getRandomColor","letters","color","i","Math","floor","random","DynamicBarChart","props","useState","dataQueue","setDataQueue","activeItemIdx","setActiveItemIdx","highestValue","setHighestValue","currentValues","setCurrentValues","firstRun","setFirstRun","afterClick","setAfterClick","iterationTimeoutHolder","start","onRunStart","setNextValues","onRunEnd","roundData","values","nextValues","map","c","id","abs","value","nextStep","data","startAutomatically","window","setTimeout","startRunningTimeout","iterationTimeout","clearTimeout","barHeight","baseline","chartWrapperStyles","mainWrapperStyles","iterationTitleStyles","labelStyles","baselineStyles","showTitle","maxValue","sortedCurrentValues","Object","keys","sort","a","b","hasBaseline","isNaN","currentItem","React","name","height","length","key","idx","currentValueData","width","behindbaseline","widthStr","top","transitionDuration","label","background","join","showStartButton","startButtonStyles","startButtonText","propTypes","PropTypes","bool","number","array","string","object","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,cAAT,GAA0B;MAClBC,UAAU,kBAAhB;MACIC,QAAQ,GAAZ;OACK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;aACjBF,QAAQG,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAR,CAAT;;SAEKJ,KAAP;;AAGF,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;kBACIC,eAAS,EAAT,CADJ;;MACvBC,SADuB;MACZC,YADY;;mBAEYF,eAAS,CAAT,CAFZ;;MAEvBG,aAFuB;MAERC,gBAFQ;;mBAGUJ,eAAS,CAAT,CAHV;;MAGvBK,YAHuB;MAGTC,eAHS;;mBAIYN,eAAS,EAAT,CAJZ;;MAIvBO,aAJuB;MAIRC,gBAJQ;;mBAKER,eAAS,KAAT,CALF;;MAKvBS,QALuB;MAKbC,WALa;;oBAMMV,eAAS,KAAT,CANN;;MAMvBW,UANuB;MAMXC,aANW;;MAO1BC,yBAAyB,IAA7B;;WAESC,KAAT,GAAiB;QACXX,gBAAgB,CAApB,EAAuB;;;QAGnBJ,MAAMgB,UAAV,EAAsB;YACdA,UAAN;;aAEO,IAAT;;;WAGOC,aAAT,GAAyB;QACnB,CAACf,UAAUE,aAAV,CAAL,EAA+B;+BACJ,IAAzB;UACIJ,MAAMkB,QAAV,EAAoB;cACZA,QAAN;;;;;QAKEC,YAAYjB,UAAUE,aAAV,EAAyBgB,MAA3C;QACMC,aAAa,EAAnB;QACIf,eAAe,CAAnB;cACUgB,GAAV,CAAc,UAACC,CAAD,EAAO;iBACRA,EAAEC,EAAb,iBACKD,CADL;eAESA,EAAE7B,KAAF,IAAW,CAACc,cAAce,EAAEC,EAAhB,KAAuB,EAAxB,EAA4B9B,KAAvC,IAAgDF;;;UAGrDI,KAAK6B,GAAL,CAASF,EAAEG,KAAX,IAAoBpB,YAAxB,EAAsC;uBACrBV,KAAK6B,GAAL,CAASF,EAAEG,KAAX,CAAf;;;aAGKH,CAAP;KAVF;;qBAaiBF,UAAjB;oBACgBf,YAAhB;qBACiBF,gBAAgB,CAAjC;;;WAGOuB,QAAT,GAAoC;QAAlBjB,QAAkB,uEAAP,KAAO;;gBACtBA,QAAZ;;;;kBAIQ,YAAM;iBACDV,MAAM4B,IAAnB;GADF,EAEG,EAFH;;kBAIU,YAAM;QACV5B,MAAM6B,kBAAV,EAA8B;;KAA9B,MAEO;;;GAHT,EAMG,CAAC3B,SAAD,CANH;;kBAQU,YAAM;QACVF,MAAM6B,kBAAN,IAA4BjB,UAAhC,EAA4C;+BACjBkB,OAAOC,UAAP,CAAkBJ,QAAlB,EAA4BjB,WAAWV,MAAMgC,mBAAjB,GAAuChC,MAAMiC,gBAAzE,CAAzB;;;WAGK,YAAM;UACPnB,sBAAJ,EAA4B;eACnBoB,YAAP,CAAoBpB,sBAApB;;KAFJ;GALF,EAUG,CAACV,aAAD,EAAgBQ,UAAhB,CAVH;;MAYQuB,SA9EsB,GA8EyHnC,KA9EzH,CA8EtBmC,SA9EsB;MA8EXC,QA9EW,GA8EyHpC,KA9EzH,CA8EXoC,QA9EW;MA8EDH,gBA9EC,GA8EyHjC,KA9EzH,CA8EDiC,gBA9EC;MA8EiBI,kBA9EjB,GA8EyHrC,KA9EzH,CA8EiBqC,kBA9EjB;MA8EqCC,iBA9ErC,GA8EyHtC,KA9EzH,CA8EqCsC,iBA9ErC;MA8EwDC,oBA9ExD,GA8EyHvC,KA9EzH,CA8EwDuC,oBA9ExD;MA8E8EC,WA9E9E,GA8EyHxC,KA9EzH,CA8E8EwC,WA9E9E;MA8E2FC,cA9E3F,GA8EyHzC,KA9EzH,CA8E2FyC,cA9E3F;MA8E2GC,SA9E3G,GA8EyH1C,KA9EzH,CA8E2G0C,SA9E3G;;MA+ExBC,WAAWrC,eAAe,IAAhC;MACMsC,sBAAsBC,OAAOC,IAAP,CAAYtC,aAAZ,EAA2BuC,IAA3B,CAAgC,UAACC,CAAD,EAAIC,CAAJ;WAAUzC,cAAcyC,CAAd,EAAiBvB,KAAjB,GAAyBlB,cAAcwC,CAAd,EAAiBtB,KAApD;GAAhC,CAA5B;MACMwB,cAAcd,aAAa,IAAb,IAAqB,CAACe,MAAMf,QAAN,CAA1C;MACMgB,cAAclD,UAAUE,gBAAgB,CAA1B,KAAgC,EAApD;;SAGEiD;;MAAK,WAAU,YAAf,EAA4B,OAAOf,iBAAnC;;oBAEI,CAAO,QAAP;;mBAGIe;;UAAI,OAAOd,oBAAX;oBAA8Ce;OAHlD;;;UAKW,WAAU,OAAnB,EAA2B,OAAOjB,kBAAlC;uBAGIgB;;YAAK,WAAU,UAAf,EAA0B,OAAOZ,cAAjC;;;;;;SAHJ;;;YAKO,4BAAyBS,cAAc,eAAd,GAAgC,EAAzD,CAAL,EAAoE,OAAO,EAAEK,QAAQ,CAACpB,YAAY,EAAb,IAAmBU,OAAOC,IAAP,CAAYtC,aAAZ,EAA2BgD,MAAxD,EAA3E;8BAEwBlC,GAApB,CAAwB,UAACmC,GAAD,EAAMC,GAAN,EAAc;gBAC9BC,mBAAmBnD,cAAciD,GAAd,CAAzB;gBACM/B,QAAQwB,cAAc,CAACS,iBAAiBjC,KAAjB,IAA0BU,QAA3B,IAAuCA,QAArD,GAAgEuB,iBAAiBjC,KAA/F;gBACIkC,QAAQhE,KAAK6B,GAAL,CAAUC,QAAQiB,QAAR,GAAmB,GAA7B,CAAZ;gBACIkB,iBAAiB,KAArB;gBACIX,eAAeS,iBAAiBjC,KAAjB,GAAyBU,QAA5C,EAAsD;+BACnC,IAAjB;;;gBAGEc,WAAJ,EAAiB;sBACPU,QAAQ,CAAhB;;;gBAGEE,iBAAJ;gBACIX,MAAMS,KAAN,KAAgB,CAACA,KAArB,EAA4B;yBACf,KAAX;aADF,MAEO;yBACSA,KAAd;;;mBAIAP;;gBAAK,6BAA0BQ,iBAAiB,iBAAjB,GAAqC,EAA/D,CAAL,EAA0E,OAAO,EAAEE,KAAK,CAAC5B,YAAY,EAAb,IAAmBuB,GAA1B,EAA+BM,oBAAoB/B,mBAAmB,IAAtE,EAAjF,EAA+J,cAAYwB,GAA3K;;;kBACS,OAAOjB,WAAd;iBAEKmB,iBAAiBM,KAAlB,GACIR,GADJ,GAEIE,iBAAiBM;eAL3B;oDAQO,WAAU,KAAf,EAAqB,OAAO,EAAEV,QAAQpB,SAAV,EAAqByB,OAAOE,QAA5B,EAAsCI,YAAY,OAAOP,iBAAiBjE,KAAxB,KAAkC,QAAlC,GAA6CiE,iBAAiBjE,KAA9D,kCAAmGiE,iBAAiBjE,KAAjB,CAAuByE,IAAvB,CAA4B,GAA5B,CAAnG,MAAlD,EAA5B,GARF;;;kBASQ,WAAU,OAAhB,EAAwB,OAAO,EAAEzE,OAAO,OAAOiE,iBAAiBjE,KAAxB,KAAkC,QAAlC,GAA6CiE,iBAAiBjE,KAA9D,GAAsEiE,iBAAiBjE,KAAjB,CAAuB,CAAvB,CAA/E,EAA/B;iCAA6JgC;;aAVjK;WApBF;;;KAdZ;UAsDU0C,eAAN,IACAf;;QAAQ,WAAU,cAAlB,EAAiC,SAAS;iBAAMxC,cAAc,IAAd,CAAN;SAA1C,EAAqE,OAAOb,MAAMqE,iBAAlF;YAA4GC;;GAxDlH;;AA8DFvE,gBAAgBwE,SAAhB,GAA4B;sBACNC,UAAUC,IADJ;aAEfD,UAAUC,IAFK;oBAGRD,UAAUE,MAHF;QAIpBF,UAAUG,KAJU;uBAKLH,UAAUE,MALL;aAMfF,UAAUE,MANK;YAOhBF,UAAUE,MAPM;mBAQTF,UAAUC,IARD;mBASTD,UAAUI,MATD;qBAUPJ,UAAUK,MAVH;sBAWNL,UAAUK,MAXJ;kBAYVL,UAAUK,MAZA;wBAaJL,UAAUK,MAbN;eAcbL,UAAUK,MAdG;qBAePL,UAAUK,MAfH;cAgBdL,UAAUM,IAhBI;YAiBhBN,UAAUM;CAjBtB;;AAoBA/E,gBAAgBgF,YAAhB,GAA+B;sBACT,IADS;aAElB,IAFkB;oBAGX,GAHW;QAIvB,EAJuB;uBAKR,CALQ;aAMlB,EANkB;YAOnB,IAPmB;mBAQZ,KARY;mBASZ,OATY;qBAUV,EAVU;sBAWT,EAXS;kBAYb,EAZa;wBAaP,EAbO;eAchB,EAdgB;qBAeV,EAfU;cAgBjB,IAhBiB;YAiBnB;CAjBZ;;;;"}